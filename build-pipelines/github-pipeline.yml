trigger:
  branches:
    include:
    - '*'     # build all branches
  paths:
    exclude:
    - docs/*  # exclude the docs folder



stages:
- stage: 'Build Stage'
  displayName: 'Build the application'
  jobs:
  - job: 'Build Job'
    displayName: 'Build Job'
    pool:
      vmImage: 'ubuntu-22.04'
      demands:
      - npm

    variables:
      buildConfiguration: 'Release'
      workingDirectory: '$(System.DefaultWorkingDirectory)/src'
      wwwrootDir: '$(workingDirectory)/Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '6.x'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        packageType: sdk
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        workingDir: '$(workingDirectory)'
        verbose: false

    - script: '$(workingDirectory)/node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'

    - task: gulp@1
      displayName: 'Run gulp tasks'
      inputs:
        gulpFile: '$(workingDirectory)/gulpfile.js'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info as .txt file'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - template: templates/dotnet-build-template.yml
      parameters:
        buildConfiguration: 'Release'

    - template: templates/dotnet-build-template.yml
      parameters:
        buildConfiguration: 'Debug'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact - $(buildConfiguration): drop'
      condition: succeeded()    
